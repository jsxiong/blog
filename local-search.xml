<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用nginx解决跨域</title>
    <link href="/blog/2022/11/10/%E4%BD%BF%E7%94%A8nginx%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/"/>
    <url>/blog/2022/11/10/%E4%BD%BF%E7%94%A8nginx%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</url>
    
    <content type="html"><![CDATA[<h4 id="若没有nginx，先安装nginx。安装解压后在nginx的目录下打开conf文件夹下的nginx-conf文件进行配置"><a href="#若没有nginx，先安装nginx。安装解压后在nginx的目录下打开conf文件夹下的nginx-conf文件进行配置" class="headerlink" title="若没有nginx，先安装nginx。安装解压后在nginx的目录下打开conf文件夹下的nginx.conf文件进行配置"></a>若没有nginx，先安装nginx。安装解压后在nginx的目录下打开conf文件夹下的nginx.conf文件进行配置</h4><h5 id="配置如下"><a href="#配置如下" class="headerlink" title="配置如下"></a>配置如下</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>     listen       80;<br>     server_name  localhost;<br><br>     <span class="hljs-comment">#charset koi8-r;</span><br><br>     <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>     location / &#123;<br>         root   html;<br>         index  index.html index.htm;<br>         proxy_pass http://127.0.0.1:5500;<br>     &#125;<br><br>     location /fetch &#123;<br>         proxy_pass https://hotlist.imtt.qq.com/Fetch;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="此时在项目中直接请求-x2F-fetch-这个接口路径就行了，-请求127-0-0-1-x2F-fetch相当于https-hotlist-imtt-qq-com-Fetch"><a href="#此时在项目中直接请求-x2F-fetch-这个接口路径就行了，-请求127-0-0-1-x2F-fetch相当于https-hotlist-imtt-qq-com-Fetch" class="headerlink" title="此时在项目中直接请求 &#x2F;fetch 这个接口路径就行了， 请求127.0.0.1&#x2F;fetch相当于https://hotlist.imtt.qq.com/Fetch"></a>此时在项目中直接请求 &#x2F;fetch 这个接口路径就行了， 请求127.0.0.1&#x2F;fetch相当于<a href="https://hotlist.imtt.qq.com/Fetch">https://hotlist.imtt.qq.com/Fetch</a></h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>js-copy</title>
    <link href="/blog/2022/10/10/js-copy/"/>
    <url>/blog/2022/10/10/js-copy/</url>
    
    <content type="html"><![CDATA[<h3 id="原生js实现复制"><a href="#原生js实现复制" class="headerlink" title="原生js实现复制"></a>原生js实现复制</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">onCopy</span>(<span class="hljs-params">text</span>) &#123;<br>  <span class="hljs-keyword">const</span> input = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;input&#x27;</span>);<br>  input.<span class="hljs-property">value</span> = text<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(input)<br>  input.<span class="hljs-title function_">select</span>()<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">execCommand</span>(<span class="hljs-string">&#x27;Copy&#x27;</span>) <br>  input.<span class="hljs-title function_">remove</span>()<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>js基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue中的keep-alive组件</title>
    <link href="/blog/2022/09/20/vue%E4%B8%AD%E7%9A%84keep-alive%E7%BB%84%E4%BB%B6/"/>
    <url>/blog/2022/09/20/vue%E4%B8%AD%E7%9A%84keep-alive%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常的业务开发中，经常会碰到这么一种需求。</p><p>从一个页面跳转到另一个页面后，再跳转回来时。要保留跳转之前的一些内容（比如搜索条件之类的）。</p><p>这个需求当然是可以通过Session Storage来实现，不过还是比较麻烦。 使用vue中的keep-alive组件就比较快乐了</p><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><ul><li>使用起来其实简单。在router-view的外面包一层keep-alive组件就行了。 这是vue的内置组件， 直接使用就好了</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> &gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>当然，并不是所有的页面都需要去缓存的，这个时候就可以使用这个组件提供的两个属性 <strong>include</strong> 和 <strong>exclude</strong> <ul><li>include - 只有名称匹配的组件会被缓存, 字符串或正则表达式</li><li>exclude - 任何名称匹配的组件都不会被缓存, 字符串或正则表达式</li></ul></li></ul><h4 id="通过传入include-x2F-exclude判断是否需要缓存"><a href="#通过传入include-x2F-exclude判断是否需要缓存" class="headerlink" title="通过传入include&#x2F;exclude判断是否需要缓存"></a>通过传入include&#x2F;exclude判断是否需要缓存</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- -逗号分隔字符串 --&gt;</span> --&gt;<br>  <span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">include</span>=<span class="hljs-string">&quot;PageA,PageB&quot;</span> <span class="hljs-attr">exclude</span>=<span class="hljs-string">&quot;PageC&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 正则表达式 (使用v-bind绑定) --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">:include</span>=<span class="hljs-string">&quot;/a|b/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- 3.数组(使用v-bind绑定)--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">:include</span>=<span class="hljs-string">&quot;[&#x27;PageA&#x27;, &#x27;PageB&#x27;]&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>tips： include，exclude首先匹配组件自身的name选项，如果没有name，则匹配它的局部注册名称 (父组件 components 选项的键值)。匿名组件不能被匹配</p></blockquote><ul><li>也可以结合路由来区分是否需要缓存，可以动态配置，更灵活</li></ul><h4 id="通过与路由结合来判断是否需要缓存"><a href="#通过与路由结合来判断是否需要缓存" class="headerlink" title="通过与路由结合来判断是否需要缓存"></a>通过与路由结合来判断是否需要缓存</h4><p>在路由的meta信息里面加一个是否需要缓存的标识，然后需要缓存的和不需要缓存入口分开成两个router-view</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/home&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Home&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">import</span>(<span class="hljs-string">&#x27;@/views/home/index&#x27;</span>),<br>  <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;工作台&#x27;</span>, <span class="hljs-attr">keepAlive</span>: <span class="hljs-literal">true</span> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;$route.meta.keepAlive&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;!$route.meta.keepAlive&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="配置完成后keep-alive不生效的话，有以下可能"><a href="#配置完成后keep-alive不生效的话，有以下可能" class="headerlink" title="配置完成后keep-alive不生效的话，有以下可能"></a>配置完成后keep-alive不生效的话，有以下可能</h4><ol><li>路由对应页面的文件没有写name，或者页面文件的name和路由配置的name不一致</li><li>v-if判断写错地方，示例:  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 错误代码</span><br>&lt;keep-alive v-<span class="hljs-keyword">if</span>=<span class="hljs-string">&quot;$route.meta.keepAlive&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br>&lt;/keep-alive&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-else</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br><br><br>&lt;!-- 正确代码 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;$route.meta.keepAlive&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;!$route.meta.keepAlive&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br></code></pre></td></tr></table></figure></li></ol><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>如果使用了keep-alive缓存，那么进入页面或者离开页面时将不会触发create、mounted、beforeDestroy。 那么改怎么办呢，可以使用以下这两个生命后期</p><p><strong>activated：</strong> 在 keep-alive 组件激活时调用（替代create、mounted）</p><p><strong>deactivated</strong>：在 keep-alive 组件停用时调用 （替代beforeDestroy）</p>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用vscode代码片段提升开发效率</title>
    <link href="/blog/2022/09/20/snippet/"/>
    <url>/blog/2022/09/20/snippet/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常业务开发的过程中，经常需要写一些重复的、记不清全称或懒得打全代码。</p><p>之前我都是找到以前的代码，然后再复制过来。找代码需要时间，难免影响效率，而且去其他文件复制看起来也不是很专业的样子，哈哈。  </p><p>后来有一天我发现了vscode支持配置代码片段，于是便愉快的使用起来了，搬砖也变得流畅起来了。 好了废话不多说了， 下面说说这个功能是怎么使用的吧</p><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><h3 id="1-找到配置入口。"><a href="#1-找到配置入口。" class="headerlink" title="1. 找到配置入口。"></a>1. 找到配置入口。</h3><ul><li>在vscode界面的左下角，点击设置，然后点击配置用户代码片段</li></ul><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bdf3cd71-1e2a-4583-b759-8239cf991f4c/bd424c3c-0819-480e-a60b-ede9a1f3974e.png" alt="配置用户代码片段入口"></p><ul><li>或者在vscode界面按快捷键 <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd>， 然后输入 <strong>snippets</strong></li></ul><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bdf3cd71-1e2a-4583-b759-8239cf991f4c/2985ab9a-6702-4f1f-a305-5c1bbacbbb55.png" alt="通过搜素的方式找到代码片段配置"></p><h3 id="2-配置代码片段"><a href="#2-配置代码片段" class="headerlink" title="2. 配置代码片段"></a>2. 配置代码片段</h3><ul><li><p>通过上面找到入口后，然后选择 <strong>代码片段:配置用户代码片段</strong></p></li><li><p>然后可以选择在已有的代码片段创建新的片段，或者是创建一个新的代码片段文件（新创建的可以说全局生效，也可以是针对这个项目生效）</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bdf3cd71-1e2a-4583-b759-8239cf991f4c/b137f90b-384d-4464-bdb6-95397efc61c2.png" alt="选择要新增代码的文件"></p></li></ul><h4 id="配置方式如下"><a href="#配置方式如下" class="headerlink" title="配置方式如下"></a>配置方式如下</h4>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// 完整代码</span><br> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;element confirm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;scope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;javascript,typescript&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;prefix&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;eledel&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;body&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br><span class="hljs-string">&quot;this.$confirm(`是否确定删除?`).then(() =&gt; &#123;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-string">&quot;  $&#123;1&#125;&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-string">&quot;&#125;)&quot;</span><br><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;确定框&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h5 id="配置参数说明"><a href="#配置参数说明" class="headerlink" title="配置参数说明"></a>配置参数说明</h5><p>第一个 “element confirm” 是个名称</p><p><strong>scope</strong>：此代码段使用的语言名称列表</p><p><strong>prefix</strong>: 调用代码片段时使用的命令</p><p><strong>body</strong>: 片段内容，$1表示光标的最终所在位置。注意: 每一行都要用引号包起来</p><p><strong>description</strong>: 备注，片段作用描述</p><h3 id="3-使用配置好的片段"><a href="#3-使用配置好的片段" class="headerlink" title="3.使用配置好的片段"></a>3.使用配置好的片段</h3><h4 id="直接在需要的地方调用刚刚配置的-prefix-命令"><a href="#直接在需要的地方调用刚刚配置的-prefix-命令" class="headerlink" title="直接在需要的地方调用刚刚配置的 prefix 命令"></a>直接在需要的地方调用刚刚配置的 prefix 命令</h4><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-bdf3cd71-1e2a-4583-b759-8239cf991f4c/2e0e44c0-e423-4aa8-a50b-e7e87144478d.gif" alt="使用代码片段"></p><h3 id="4-一个生成片段的小工具"><a href="#4-一个生成片段的小工具" class="headerlink" title="4. 一个生成片段的小工具"></a>4. 一个生成片段的小工具</h3><p>把代码片段放进去，然后复制到代码片段里。 主要是片段body里面每一行都加引号，手动加就比较麻烦，用这个工具直接就生成好了。</p><p><a href="https://snippet-generator.app/">https://snippet-generator.app</a></p><hr><p>END</p>]]></content>
    
    
    
    <tags>
      
      <tag>效率</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdowm基础使用</title>
    <link href="/blog/2022/09/01/markdowm%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <url>/blog/2022/09/01/markdowm%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<!-- https://zhuanlan.zhihu.com/p/108984311 --><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><h2 id="2-段落样式"><a href="#2-段落样式" class="headerlink" title="2. 段落样式"></a>2. 段落样式</h2><h3 id="2-1-字体"><a href="#2-1-字体" class="headerlink" title="2.1 字体"></a>2.1 字体</h3><ul><li><em>斜体</em> ： 用 * 或 _ 表示 (一个星号或一个底线)</li><li><strong>粗体</strong> ：用 ** 或 __  表示 (两个星号或底线)</li><li><em><strong>粗斜体</strong></em> ：用 *** 或 ___ 表示 (三个星号或底线)</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-code"> _斜体_ </span><br><span class="hljs-strong">**粗体**</span><br><span class="hljs-emphasis">___粗斜体__</span>_ <br></code></pre></td></tr></table></figure><h3 id="2-2-分割线"><a href="#2-2-分割线" class="headerlink" title="2.2 分割线"></a>2.2 分割线</h3><p>在一行中用三个以上的星号* 减号- 底线_ 都可以创建一个分割线 （这一行内不能有其他东西）</p><hr><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span><br><span class="hljs-emphasis"><span class="hljs-strong">*</span> <span class="hljs-emphasis">* *</span></span><br><span class="hljs-strong">**</span><span class="hljs-strong">****</span><br><span class="hljs-section">- - -</span><br><span class="hljs-section">------</span><br></code></pre></td></tr></table></figure><h3 id="2-3-删除线"><a href="#2-3-删除线" class="headerlink" title="2.3 删除线"></a>2.3 删除线</h3><p><del>这就是删除线</del></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haml">~~这就是删除线~~<br></code></pre></td></tr></table></figure><h3 id="2-4-下划线"><a href="#2-4-下划线" class="headerlink" title="2.4 下划线"></a>2.4 下划线</h3><p>可以通过HTML的标签来实现</p><p><u>带下划线文本</u></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span>带下划线文本<span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-5-脚注"><a href="#2-5-脚注" class="headerlink" title="2.5 脚注"></a>2.5 脚注</h4><p>这是一段[^脚注1] 内容内容 [^脚注2]。<br>[^脚注1]: 这是脚注1<br>[^脚注2]: 这是脚注2</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一段[^脚注1] 内容内容 [^脚注2]。<br>[<span class="hljs-symbol">^脚注1</span>]: <span class="hljs-link">这是脚注1</span><br>[<span class="hljs-symbol">^脚注2</span>]: <span class="hljs-link">这是脚注2</span><br></code></pre></td></tr></table></figure><h2 id="3-列表"><a href="#3-列表" class="headerlink" title="3. 列表"></a>3. 列表</h2><h3 id="3-1-无序列表"><a href="#3-1-无序列表" class="headerlink" title="3.1 无序列表"></a>3.1 无序列表</h3><p> 星号 加号 减号都可以创建无须列表</p><ul><li>item1</li></ul><ul><li>item2</li></ul><ul><li>item3</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> item1 <br><span class="hljs-bullet">+</span> item2 <br><span class="hljs-bullet">-</span> item3 <br></code></pre></td></tr></table></figure><h3 id="3-2-有序列表"><a href="#3-2-有序列表" class="headerlink" title="3.2 有序列表"></a>3.2 有序列表</h3><p>有序列表直接在文字前加上1. 2. 3. 来表示，符号和文字间要加个空格。回车换行后数字会自动累加。</p><ol><li>item1</li><li>item2</li><li>item3</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> item1<br><span class="hljs-bullet">2.</span> item2<br><span class="hljs-bullet">3.</span> item3<br></code></pre></td></tr></table></figure><h3 id="3-3-列表嵌套"><a href="#3-3-列表嵌套" class="headerlink" title="3.3 列表嵌套"></a>3.3 列表嵌套</h3><p>列表嵌套只需在子列表的选项前加四个空格即可：</p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 第一项：<br><span class="hljs-bullet">    -</span> 第一项嵌套的第一个元素<br><span class="hljs-bullet">    -</span> 第一项嵌套的第二个元素<br><span class="hljs-bullet">2.</span> 第二项：<br><span class="hljs-bullet">    -</span> 第二项嵌套的第一个元素<br><span class="hljs-bullet">    -</span> 第二项嵌套的第二个元素<br></code></pre></td></tr></table></figure><h2 id="4-页面区块"><a href="#4-页面区块" class="headerlink" title="4. 页面区块"></a>4. 页面区块</h2><p>区块是可以嵌套的，一个&gt;符号是最外层，两个符号是第一层嵌套，以此类推</p><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">最外层</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt; 第一层嵌套</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; 第二层嵌套</span><br></code></pre></td></tr></table></figure><h2 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5. 代码块"></a>5. 代码块</h2><p>前后都使用&#96;&#96;&#96;包起来</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">&lt;!-- 为了能够渲染出来 下面用的 - 代替 ` --&gt;</span><br><span class="hljs-section">---</span><br>javascript<br>$(document).read(function()&#123;<br><span class="hljs-code">    alert(&#x27;Markdown&#x27;);</span><br><span class="hljs-section">&#125;);</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><h2 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6. 超链接"></a>6. 超链接</h2><p><a href="https://baidu.com/">百度</a><br> <a href="https://baidu.com/">https://baidu.com</a></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[百度]</span>(<span class="hljs-attribute">https</span>:<span class="hljs-comment">//baidu.com)</span><br>&lt;<span class="hljs-attribute">https</span>:<span class="hljs-comment">//baidu.com&gt;</span><br><br>[链接名称](链接地址)<br>或者<br>&lt;链接地址&gt; <br></code></pre></td></tr></table></figure><h3 id="6-1-变量链接"><a href="#6-1-变量链接" class="headerlink" title="6.1 变量链接"></a>6.1 变量链接</h3><p>链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用1作为网址变量<a href="http://www.baidu.com/">baidu</a><br>这个链接用markdown作为网址变量<a href="http://www.markdown.com/">Markdown</a><br>然后文档的结尾为变量赋值(网址)</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less">链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用<span class="hljs-number">1</span>作为网址变量<span class="hljs-selector-attr">[baidu]</span><span class="hljs-selector-attr">[1]</span><br>这个链接用<span class="hljs-selector-tag">markdown</span>作为网址变量<span class="hljs-selector-attr">[Markdown]</span><span class="hljs-selector-attr">[markdown]</span><br>然后文档的结尾为变量赋值(网址)<br><br><span class="hljs-selector-attr">[1]</span>: <span class="hljs-selector-tag">http</span>:<span class="hljs-comment">//www.baidu.com</span><br><span class="hljs-selector-attr">[markdown]</span>: <span class="hljs-selector-tag">http</span>:<span class="hljs-comment">//www.markdown.com</span><br></code></pre></td></tr></table></figure><h2 id="7-图片"><a href="#7-图片" class="headerlink" title="7. 图片"></a>7. 图片</h2><p><img src="https://img2.baidu.com/it/u=1506786953,4018166065&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=160" alt="alt 属性文本"></p><p><img src="https://img0.baidu.com/it/u=2367444748,1187071260&fm=253&fmt=auto&app=138&f=JPEG?w=889&h=500" alt="alt 属性文本" title="图片名称"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">![alt 属性文本]<span class="hljs-params">(图片地址)</span><br>![alt 属性文本]<span class="hljs-params">(图片地址 &quot;可选标题&quot;)</span><br><br><br>![alt 属性文本]<span class="hljs-params">(https://img2.baidu.com/it/<span class="hljs-attr">u</span>=1506786953,4018166065&amp;<span class="hljs-attr">fm</span>=253&amp;<span class="hljs-attr">fmt</span>=auto&amp;<span class="hljs-attr">app</span>=138&amp;<span class="hljs-attr">f</span>=JPEG?<span class="hljs-attr">w</span>=500&amp;<span class="hljs-attr">h</span>=160)</span><br><br>![alt 属性文本]<span class="hljs-params">(https://img0.baidu.com/it/<span class="hljs-attr">u</span>=2367444748,1187071260&amp;<span class="hljs-attr">fm</span>=253&amp;<span class="hljs-attr">fmt</span>=auto&amp;<span class="hljs-attr">app</span>=138&amp;<span class="hljs-attr">f</span>=JPEG?<span class="hljs-attr">w</span>=889&amp;<span class="hljs-attr">h</span>=500 &quot;图片名称&quot;)</span><br></code></pre></td></tr></table></figure><h6 id="也可以像网址那样对图片使用变量"><a href="#也可以像网址那样对图片使用变量" class="headerlink" title="也可以像网址那样对图片使用变量"></a>也可以像网址那样对图片使用变量</h6><h6 id="不过，-Markdown-没有办法指定图片的高度与宽度，如果需要的话，可以使用html的img标签定义宽高"><a href="#不过，-Markdown-没有办法指定图片的高度与宽度，如果需要的话，可以使用html的img标签定义宽高" class="headerlink" title="不过， Markdown 没有办法指定图片的高度与宽度，如果需要的话，可以使用html的img标签定义宽高"></a>不过， Markdown 没有办法指定图片的高度与宽度，如果需要的话，可以使用html的img标签定义宽高</h6><p><img width="200"height="100"src="https://img2.baidu.com/it/u=2703411705,3588113199&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=281"/></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> </span><br><span class="hljs-tag">   <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;200&quot;</span></span><br><span class="hljs-tag">   <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span></span><br><span class="hljs-tag">   <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img2.baidu.com/it/u=2703411705,3588113199&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=281&quot;</span></span><br><span class="hljs-tag">/&gt;</span><br></code></pre></td></tr></table></figure><h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8. 表格"></a>8. 表格</h2><p>表格使用|来分隔不同的单元格，使用-来分隔表头和其他行。</p><h4 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h4><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>单元格11</td><td>单元格12</td></tr><tr><td>单元格21</td><td>单元格22</td></tr></tbody></table><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string">表头1</span>|<span class="hljs-string">表头2</span>|<br>|<span class="hljs-string">----</span>|<span class="hljs-string">----</span>|<br>|<span class="hljs-string">单元格11</span>|<span class="hljs-string">单元格12</span>|<br>|<span class="hljs-string">单元格21</span>|<span class="hljs-string">单元格22</span>|<br></code></pre></td></tr></table></figure><h3 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h3><table><thead><tr><th align="left">左对齐</th><th align="center">居中对齐</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">单元格11</td><td align="center">单元格12</td><td align="right">单元格13</td></tr><tr><td align="left">单元格21</td><td align="center">单元格22</td><td align="right">单元格23</td></tr></tbody></table><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string">左对齐</span>|<span class="hljs-string">居中对齐</span>|<span class="hljs-string">右对齐</span>|<br>|<span class="hljs-string">:----</span>|<span class="hljs-string">:----:</span>|<span class="hljs-string">----:</span>|<br>|<span class="hljs-string">单元格11</span>|<span class="hljs-string">单元格12</span>|<span class="hljs-string">单元格13</span>|<br>|<span class="hljs-string">单元格21</span>|<span class="hljs-string">单元格22</span>|<span class="hljs-string">单元格23</span>|<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
